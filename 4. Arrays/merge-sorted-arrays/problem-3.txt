Merge Sorted Arrays


Optimal Approach:
******************
1. We have two sorted arrays:
2. nums1 with length m+n where the first m elements are valid
3. nums2 with n elements
4. The goal: merge nums2 into nums1 in sorted order in-place
5. Start filling nums1 from the end (index m + n - 1), comparing the last elements of both arrays (nums1[m-1] and nums2[n-1])
6. Place the larger element at the current last position
7. Move pointers accordingly:
8. Decrement the pointer in nums1 or nums2
9. Decrement the position pointer for placement
10. If nums2 is exhausted first, merging is done
11. If nums1 is exhausted first, copy remaining elements of nums2


Time Complexity:
*****************
1. Time Complexity = O((m + n) log (m + n)) due to sorting


Space Complexity:
******************
1. Space Complexity = O(1) (constant space)

Explanation:
1. No extra significant space is used (in-place)
2. Only a few variables (p1, p2, i) are used
