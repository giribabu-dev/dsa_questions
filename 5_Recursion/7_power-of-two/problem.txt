Power of Two

Write a recursive function isPowerOfTwo(n) that returns true if n is a power of 2, otherwise false.


Concepts:
**********
1. Power of Two: A number is a power of 2, if it can be divided by 2 repeatedly until it reaches 1.
2. Base Case: n == 1 → true
3. Invalid Case: n < 1 or n % 2 != 0 → false
4. Recursive Case: isPowerOfTwo(n / 2)


Examples:
**********
Input: 8
Output: true (8 → 4 → 2 → 1)

Input: 18
Output: false (18 → 9)


Time & Space Complexity:
*************************
1. Time Complexity = O(log n)
2. Space Complexity = O(log n) (due to recursion stack)
